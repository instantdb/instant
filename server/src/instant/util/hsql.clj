(ns instant.util.hsql
  (:require [honey.sql :as hsql]))

(defn preformat [q]
  {:pre [(map? q)]
   ;; Ensure that we don't accidentally encode a variable
   ;; into the query. If you need to embed a constant use :inline
   ;; Bad: {:select :* :where [:= :type "my-type"]
   ;; Good: {:select :* :where [:= :type [:inline "my-type"]]}
   :post [(every? (fn [arg] (::hsql/wrapper (meta arg)))
                  (rest %))]}
  (hsql/format-dsl q nil))

(defn formatp
  "Takes a preformatted query, generated by `preformat` and a map of
   keyword params and returns a query you can pass to sql/query.

   (let [q {:select :* :from :users :where [:= :id :?id]}
         pq (preformat q)]
     (is (= (formatp pq {:id 1})
            (hsql/format q {:params {:id 1}}))))

  Does not support any honeysql options. Only supports map-based queries.

  You must use predefined params, e.g. `[:= :id :?id]` not `[:= :id 1]`"
  [preformatted-query params]
  (binding [hsql/*params* params]
    (mapv #(#'hsql/unwrap % {}) preformatted-query)))
