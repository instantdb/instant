Resources:
  AWSEBAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Metadata:
      AWS::ElasticBeanstalk::Ext:
        PreferredAvailabilityZones: "us-east-1b"
    Properties:
      AutoScalingGroupName: eb-refinery-auto-scaling-group
      AvailabilityZones:
        - 'us-east-1b'
  AWSEBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "refinery auto scaling group"
      SecurityGroupIngress:
        - Description: "Inbound from prod"
          SourceSecurityGroupId: "sg-051cfc0a20314d181"
          FromPort: '8082'
          ToPort: '8082'
          IpProtocol: tcp
        - Description: "Inbound from staging"
          SourceSecurityGroupId: "sg-06dad1fbc6421604e"
          FromPort: '8082'
          ToPort: '8082'
          IpProtocol: tcp
        - Description: "Inbound from elb"
          SourceSecurityGroupId:
            Ref: "AWSEBLoadBalancerSecurityGroup"
          FromPort: '8082'
          ToPort: '8082'
          IpProtocol: tcp
        - Description: "ec2 instance connect"
          SourcePrefixListId: "pl-0e4bcff02b13bef1e"
          FromPort: '22'
          ToPort: '22'
          IpProtocol: tcp

  RefineryPeerToPeerSGIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: AWSEBSecurityGroup
    Properties:
      Description: "communicate with peers"
      GroupId:
        Fn::GetAtt: "AWSEBSecurityGroup.GroupId"
      FromPort: '8081'
      ToPort: '8081'
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt: "AWSEBSecurityGroup.GroupId"

  AWSEBEC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: eb-refinery-launch-template
  AWSEBV2LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 8082
      Protocol: TCP
  AWSEBV2LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: eb-refinery-elb
      Scheme: internal
      Type: network
      SecurityGroups:
        - Ref: "AWSEBLoadBalancerSecurityGroup"
  AWSEBLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "refinery load balancer"
      VpcId: "vpc-00063e3a899656167"
      SecurityGroupIngress:
        - Description: "Inbound from prod"
          SourceSecurityGroupId: "sg-051cfc0a20314d181"
          FromPort: '8082'
          ToPort: '8082'
          IpProtocol: tcp
        - Description: "Inbound from staging"
          SourceSecurityGroupId: "sg-06dad1fbc6421604e"
          FromPort: '8082'
          ToPort: '8082'
          IpProtocol: tcp
      SecurityGroupEgress:
        - Description: "Outbound"
          CidrIp: "0.0.0.0/0"
          FromPort: "8081"
          ToPort: "8082"
          IpProtocol: "tcp"
  AWSEBV2LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: eb-refinery-target-group
      Protocol: TCP
      Port: 8082
      HealthCheckEnabled: true
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 5
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 4
      HealthCheckIntervalSeconds: 5
      HealthCheckPort: traffic-port
