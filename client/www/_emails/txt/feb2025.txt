
Hey crew! Itâ€™s time for another edition of Instant News ðŸ™‚ This time itâ€™s a double issue! Hereâ€™s a slice of what happened since the start of the year!

**Upgraded Explorer**

Explorer got a slew of updates! Hereâ€™s a rundown of what got shipped

* You can select fields and start querying for strings. Or use a comparison operator. Or set an exact match for something like an ID. This should make it much easier to find and filter rows!

* We built a UI for adding links between entities! Beforehand you needed to either use the Sandbox or create links via a script. This should make working with links much easier

* We added deep-linking to the explorer. This should hopefully make it a little easier to navigate the explorer using the forward/back buttons and allow you to directly send links to your team to get to a specific explorer state!

We hope these improvements make working with Instant more delightful!

**Cascade on delete**

Sometimes, objects depend on each other. If you delete a â€˜postâ€™, all its comments should be deleted. Now you can make sure of that with a click in your Explorer.

We wanted to be thoughtful about this feature and make sure that it was performant for you so all on-delete cascades happen in one call under the hood! [Check out the docs](https://www.instantdb.com/docs/modeling-data#cascade-delete) to learn more!

**Storage available for all**

You should now see a new `$files` namespace for all apps in your explorer. Similar to the `$users` namespace, this a special system namespace which contains data you can use to upload and serve assets in your apps.

Uploading is as easy as one line -- `db.storage.uploadFile("hello-world", file)`

You can then retrieve urls by querying the `$files` namespace.

`$files` works like any other table. This means you can link files to other namespaces, filter them, sort them, and do some cool queries.

It also means you can set `CASCADE DELETE` on files. So when a profile is deleted, all associated assets can be automagically deleted for you as well. You can see storage live in our [announcement tweet](https://x.com/instant_db/status/1892712087245185261) and a [full example in our docs.](https://www.instantdb.com/docs/storage#storage-quick-start)

Storage is now available for all apps. Free apps can store up to 1GB and paid ups can store up to 10GB and then $0.125/GB after.

**Select fields**

By default InstaQL queries fetch all the fields for an object. Sometimes though you donâ€™t need all the data and just want stub or a subset. You can now do this via the `fields` clause.

The `fields` clause can also be used in [nested relations](https://www.instantdb.com/docs/instaql#select-fields). This is particularly helpful for reducing the payload for your queries!

**And a few more things!**

More wins that got shipped thanks to your feedback!

* **@instandb/react-native** now uses IndexedDB for react-native-web contexts, matching the behavior of our web react package.

* We updated **rooms** to use static hooks and return stable values. This remove type warnings and improve perf when using presence!

* We made the devtool more configurable, you can now choose where you want to place the dev tool (vercel puts their dev-tool in the bottom left, so you can now move Instantâ€™s to the bottom-right). You can also configure the allowed hosts for the devtool in case you run dev outside of localhost

* We also updated the CLI to enabling load **instant.schema.ts** and **instant.perms.ts** from a custom path.

* For those who love reading technical content, we published an [essay](https://www.instantdb.com/essays/pg_upgrade) on our zero-downtime migration to Postgres 16, leading to some great discussion on [HN](https://news.ycombinator.com/item?id=42867657)

**Whatâ€™s next?**

Weâ€™ve got some awesome features coming out next month! Weâ€™re also going to lean into making LLMs understand Instant. Weâ€™re pretty excited so stay tuned :)
